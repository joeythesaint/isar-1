#!/bin/sh
#
# This software is a part of ISAR.
# Copyright (C) 2015-2017 ilbers GmbH

CONSOLE_OUTPUT=/tmp/isar_console
PID_FILE=/tmp/qemu.pid
VERBOSE=0

# Error codes:
ES_OK=0
ES_FAIL=1
ES_BUG=3

RET=$ES_OK

dump_boot_log() {
    echo "Boot log:\n8<--"
    cat $CONSOLE_OUTPUT
    echo "\n8<--"
}

check_login_prompt() {
    echo -n "Check login prompt: "

    str=$(grep "isar login: " $CONSOLE_OUTPUT)

    if [ -n "$str" ]; then
        echo "PASSED"
    else
        echo "FAIL"
        RET=$ES_FAIL
        FAIL=1
    fi
}

check_example_module() {
    echo -n "Check example module: "

    str=$(grep "Just an example" $CONSOLE_OUTPUT)

    if [ -n "$str" ]; then
        echo "PASSED"
    else
        echo "FAIL"
        RET=$ES_FAIL
        FAIL=1
    fi
}

run_test () {
    ARCH=$1
    DISTRO=$2

    echo "-------------------------------------------------"
    echo "Testing Isar [$DISTRO] image for [$ARCH] machine:"

    # Start QEMU with Isar image
    start_vm -a $ARCH -d $DISTRO -o $CONSOLE_OUTPUT -p $PID_FILE > /dev/null 2>&1 &
    sleep 60
    kill `cat $PID_FILE`

    FAIL=0

    # Check login prompt
    check_login_prompt

    # Check kernel module
    check_example_module

    [ $VERBOSE -eq 1 -o $FAIL -eq 1 ] && dump_boot_log

    # Clean up test artifacts
    rm $CONSOLE_OUTPUT
    rm $PID_FILE
}

show_help() {
    echo "This script tests all the default Isar images in QEMU."
    echo
    echo "Usage:"
    echo "    $0 [params]"
    echo
    echo "Parameters:"
    echo "    -v, --verbose         display boot logs for all the targets."
    echo "    -h, --help            display this message and exit."
    echo
    echo "Exit status:"
    echo " 0  if OK,"
    echo " 1  if test failed,"
    echo " 3  if invalid parameters are passed."
}

# Parse command line to get user configuration
while [ $# -gt 0 ]
do
    key="$1"

    case $key in
    -h|--help)
        show_help
        exit 0
        ;;
    -v|--verbose)
        VERBOSE=1
        ;;
    *)
        echo "error: invalid parameter '$key', please try '--help' to get list of supported parameters"
        exit $ES_BUG
        ;;
    esac

    shift
done

# ARM machine
run_test arm wheezy
run_test arm jessie
run_test arm stretch

# AMD64 machine
run_test amd64 jessie
run_test amd64 stretch

# i386 machine
run_test i386 jessie
run_test i386 stretch

# ARM64 machine
run_test arm64 stretch

exit $RET
